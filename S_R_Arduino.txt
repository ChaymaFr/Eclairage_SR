#include <WiFi.h>
#include "Adafruit_MQTT.h"
#include "Adafruit_MQTT_Client.h"

#define WLAN_SSID       "AQUATEC_HD2"
#define WLAN_PASS       "5210008499"
#define AIO_SERVER      "io.adafruit.com"
#define AIO_SERVERPORT  1883                  
#define AIO_USERNAME  "ChaymaFr"
#define AIO_KEY       "aio_ZAhP96WsVcDPbGOFT9eHnurtpdaF"

int output1 = 2;
int output2 = 16;
int output3 = 5;

WiFiClient client;     // Create an ESP8266 WiFiClient class to connect to the MQTT server.

Adafruit_MQTT_Client mqtt(&client, AIO_SERVER, AIO_SERVERPORT, AIO_USERNAME, AIO_KEY);        // Setup the MQTT client class by passing in the WiFi client and MQTT server and login details.

Adafruit_MQTT_Subscribe Led_Control = Adafruit_MQTT_Subscribe(&mqtt, AIO_USERNAME "/feeds/Led_Control");
Adafruit_MQTT_Subscribe Led_control_salon = Adafruit_MQTT_Subscribe(&mqtt, AIO_USERNAME "/feeds/Led_control_salon");
Adafruit_MQTT_Subscribe Ventilateur_control = Adafruit_MQTT_Subscribe(&mqtt, AIO_USERNAME "/feeds/Ventilateur_control");



void MQTT_connect();

void setup() {

  Serial.begin(115200);

  delay(10);

pinMode(2,OUTPUT);
pinMode(16,OUTPUT);
pinMode(5,OUTPUT);

 // Connect to WiFi access point.

  Serial.println(); Serial.println();

  Serial.print("Connecting to ");

  Serial.println(WLAN_SSID);

 

  WiFi.begin(WLAN_SSID, WLAN_PASS);

  while (WiFi.status() != WL_CONNECTED) {

    delay(500);

    Serial.print(".");

  }

  Serial.println();

 Serial.println("WiFi connected");

  Serial.println("IP address: "); Serial.println(WiFi.localIP());

  mqtt.subscribe(&Led_Control);
  mqtt.subscribe(&Led_control_salon);
  mqtt.subscribe(&Ventilateur_control);
}

uint32_t x=0;

void loop() {

   MQTT_connect();

Adafruit_MQTT_Subscribe *subscription;

  while ((subscription = mqtt.readSubscription(5000))) {

    if (subscription == &Led_Control) {

      Serial.print(F("Got: "));

      Serial.println((char *)Led_Control.lastread);
      
      // Lumière du tableau
       if (!strcmp((char*) Led_Control.lastread, "ON1"))
      {
        digitalWrite(2, HIGH);
      }
      else
      {
        digitalWrite(2, LOW);
      }
    }   

    
    if (subscription == &Led_control_salon) {

      Serial.print(F("Got: "));

      Serial.println((char *)Led_control_salon.lastread);
      
      // Lumière du tableau
       if (!strcmp((char*) Led_control_salon.lastread, "ON2"))
      {
        digitalWrite(16, HIGH);
      }
      else
      {
        digitalWrite(16, LOW);
      }
    }  
    
    if (subscription == &Ventilateur_control) {

      Serial.print(F("Got: "));

      Serial.println((char *)Ventilateur_control.lastread);
      
      // Lumière du tableau
       if (!strcmp((char*) Ventilateur_control.lastread, "ON3"))
      {
        digitalWrite(5, HIGH);
      }
      else
      {
        digitalWrite(5, LOW);
      }
    }  



    
  }

}













void MQTT_connect() {

  int8_t ret;

  // Stop if already connected.

  if (mqtt.connected()) {

    return;

  }

 Serial.print("Connecting to MQTT... ");

uint8_t retries = 3;

  while ((ret = mqtt.connect()) != 0) { // connect will return 0 for connected

       Serial.println(mqtt.connectErrorString(ret));

       Serial.println("Retrying MQTT connection in 5 seconds...");

       mqtt.disconnect();

       delay(5000);  // wait 5 seconds

       retries--;

       if (retries == 0) {

         // basically die and wait for WDT to reset me

         while (1);

       }

  }

  Serial.println("MQTT Connected!");

}